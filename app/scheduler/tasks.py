from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from aiogram import Bot
import pytz
import app.database.requests as rq
import app.keyboards.user.user as kb
from app.servers.config import CHANNEL_ID_DAILY
from datetime import datetime

EKATERINBURG_TZ = pytz.timezone('Asia/Yekaterinburg')

async def send_monthly_report(bot: Bot):
    now = datetime.now(EKATERINBURG_TZ)
    year, month = now.year, now.month
    report_data = await rq.get_monthly_report(year, month)
    month_names = {1: "–Ø–Ω–≤–∞—Ä—å", 2: "–§–µ–≤—Ä–∞–ª—å", 3: "–ú–∞—Ä—Ç", 4: "–ê–ø—Ä–µ–ª—å", 5: "–ú–∞–π", 6: "–ò—é–Ω—å",
                   7: "–ò—é–ª—å", 8: "–ê–≤–≥—É—Å—Ç", 9: "–°–µ–Ω—Ç—è–±—Ä—å", 10: "–û–∫—Ç—è–±—Ä—å", 11: "–ù–æ—è–±—Ä—å", 12: "–î–µ–∫–∞–±—Ä—å"}
    report = (
        f"üìÖ <b>–û—Ç—á—ë—Ç –∑–∞ {month_names[month]} {year} –≥–æ–¥–∞</b>\n\n"
        f"üë• <b>–ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {report_data['new_users']}\n"
        f"üõí <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂:</b> {report_data['sales_count']}\n"
        f"üí∏ <b>–°—É–º–º–∞ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:</b> {report_data['sales_amount']:.2f} —Ä—É–±.\n"
        f"üéÅ <b>–ù–∞—á–∏—Å–ª–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤:</b> {report_data['bonuses_added']:.2f}\n"
        f"üî• <b>–°–ø–∏—Å–∞–Ω–æ –±–æ–Ω—É—Å–æ–≤:</b> {report_data['bonuses_spent']:.2f}\n\n"
        f"‚ú® <i>–û—Ç—á—ë—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω {now.strftime('%d.%m.%Y –≤ %H:%M')}</i>\n"
    )
    try:
        await bot.send_message(chat_id=CHANNEL_ID_DAILY, text=report, parse_mode="HTML")
        print("–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –æ—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞: {e}")

async def send_daily_appointments(bot: Bot) -> int | None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –≤ Telegram-–∫–∞–Ω–∞–ª –≤ 8:00."""
    today = datetime.now(EKATERINBURG_TZ)
    appointments = await rq.get_appointments_for_today()
    if not appointments:
        message = f"üìÖ <b>–ó–∞–ø–∏—Å—å –≤ —Å–µ—Ä–≤–∏—Å –Ω–∞ {today.strftime('%d.%m.%Y')} (—Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å)</b>\n\n–ù–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π"
    else:
        message_lines = [f"üìÖ <b>–ó–∞–ø–∏—Å—å –≤ —Å–µ—Ä–≤–∏—Å –Ω–∞ {today.strftime('%d.%m.%Y')} (—Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å)</b>\n"]
        for appt in appointments:
            user = await rq.get_user_profile(appt.user_id)
            name = user.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ') if user else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
            status = "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞" if appt.is_confirmed else "‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞"
            message_lines.append(
                "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n"
                f"<b>–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞:</b> {name}\n"
                f"<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:<b> <code>{appt.mobile_phone}</code>\n"
                f"<b>–í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏:<b> {appt.date_time.strftime('%H:%M')}\n"
                f"<b>–°—Ç–∞—Ç—É—Å:<b> {status}\n"
            )
        message = "\n".join(message_lines) + "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî"
    try:
        msg = await bot.send_message(chat_id=CHANNEL_ID_DAILY, text=message, parse_mode="HTML")
        await rq.set_daily_message_id(msg.message_id)
        return msg.message_id
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞: {e}")
        return None

async def notify_upcoming_appointments(bot: Bot):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∑–∞ 3 —á–∞—Å–∞ –¥–æ –∑–∞–ø–∏—Å–∏."""
    current_time = datetime.now(EKATERINBURG_TZ)
    appointments = await rq.get_upcoming_appointments_for_notification(current_time)
    for appt in appointments:
        keyboard = await kb.get_approved_appointment_keyboard(appt.user_id)
        message = (
            f"‚è∞ <b>–£ –≤–∞—Å –∑–∞–ø–∏—Å—å –≤ —Å–µ—Ä–≤–∏—Å</b> –Ω–∞ {appt.date_time.strftime('%H:%M %d.%m.%Y')}\n"
            f"üõ†Ô∏è <b>–£—Å–ª—É–≥–∞:</b> {appt.service.split('. –¢–∏–ø –º–∞—à–∏–Ω—ã')[0] if '. –¢–∏–ø –º–∞—à–∏–Ω—ã' in appt.service else appt.service}\n\n"
            "<b>–í—ã –ø—Ä–∏–µ–¥–µ—Ç–µ?</b> ü§î"
        )
        try:
            await bot.send_message(chat_id=appt.user_id, text=message, reply_markup=keyboard)
            await rq.set_notified(appt.user_id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {appt.user_id}: {e}")

async def setup_scheduler(bot: Bot):
    scheduler = AsyncIOScheduler(timezone=EKATERINBURG_TZ)
    scheduler.add_job(send_daily_appointments, trigger=CronTrigger(hour=7, minute=0), args=[bot], max_instances=1)
    scheduler.add_job(notify_upcoming_appointments, trigger=CronTrigger(hour="7-19", minute=0), args=[bot], max_instances=1)
    scheduler.add_job(send_monthly_report, trigger=CronTrigger(day="last", hour=18, minute=0), args=[bot], max_instances=1)
    scheduler.start()

    return scheduler