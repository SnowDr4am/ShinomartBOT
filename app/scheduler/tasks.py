from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from aiogram import Bot
import app.database.requests as kb
from app.servers.config import CHANNEL_ID
from datetime import datetime

async def send_monthly_report(bot: Bot):
    now = datetime.now()
    year, month = now.year, now.month

    report_data = await kb.get_monthly_report(year, month)

    month_names = {
        1: "–Ø–Ω–≤–∞—Ä—å", 2: "–§–µ–≤—Ä–∞–ª—å", 3: "–ú–∞—Ä—Ç", 4: "–ê–ø—Ä–µ–ª—å",
        5: "–ú–∞–π", 6: "–ò—é–Ω—å", 7: "–ò—é–ª—å", 8: "–ê–≤–≥—É—Å—Ç",
        9: "–°–µ–Ω—Ç—è–±—Ä—å", 10: "–û–∫—Ç—è–±—Ä—å", 11: "–ù–æ—è–±—Ä—å", 12: "–î–µ–∫–∞–±—Ä—å"
    }
    report = (
        f"üìÖ <b>–û—Ç—á—ë—Ç –∑–∞ {month_names[month]} {year} –≥–æ–¥–∞</b>\n\n"
        f"üë• <b>–ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {report_data['new_users']}\n"
        f"üõí <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂:</b> {report_data['sales_count']}\n"
        f"üí∏ <b>–°—É–º–º–∞ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:</b> {report_data['sales_amount']:.2f} —Ä—É–±.\n"
        f"üéÅ <b>–ù–∞—á–∏—Å–ª–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤:</b> {report_data['bonuses_added']:.2f}\n"
        f"üî• <b>–°–ø–∏—Å–∞–Ω–æ –±–æ–Ω—É—Å–æ–≤:</b> {report_data['bonuses_spent']:.2f}\n\n"
        f"‚ú® <i>–û—Ç—á—ë—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω {now.strftime('%d.%m.%Y –≤ %H:%M')}</i>\n"
    )

    try:
        await bot.send_message(chat_id=CHANNEL_ID, text=report, parse_mode="HTML")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞: {e}")

async def setup_scheduler(bot: Bot):
    scheduler = AsyncIOScheduler()
    scheduler.add_job(
        send_monthly_report,
        trigger=CronTrigger(day="last", hour=18, minute=00),
        args=[bot]
    )
    scheduler.start()

    return scheduler