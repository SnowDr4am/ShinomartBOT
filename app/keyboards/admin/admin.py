from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='statistics')],
    [InlineKeyboardButton(text="üí≥ –ë–æ–Ω—É—Å—ã", callback_data='bonus_system')],
    [InlineKeyboardButton(text="üë®‚Äçüíº –†–∞–±–æ—Ç–Ω–∏–∫–∏", callback_data='employees')],
    [InlineKeyboardButton(text="üí¨ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data='send_message')]
])

# –í—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
time_period = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="üìÖ –ó–∞ —Å—É—Ç–∫–∏", callback_data='statistics:day'),
        InlineKeyboardButton(text="üìÖ –ó–∞ –Ω–µ–¥–µ–ª—é", callback_data='statistics:week')
    ],
    [
        InlineKeyboardButton(text="üìÖ –ó–∞ –º–µ—Å—è—Ü", callback_data='statistics:month'),
        InlineKeyboardButton(text="üìÖ –ó–∞ –≤—Å—ë –≤—Ä–µ–º—è", callback_data="statistics:all")
    ],
    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]
])

# –°–∏—Å—Ç–µ–º–∞ –±–æ–Ω—É—Å–æ–≤
bonus_system = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üí∏ –ò–∑–º–µ–Ω–∏—Ç—å –∫–µ—à–±–µ–∫", callback_data='change:cashback')],
    [InlineKeyboardButton(text="üí≥ –ò–∑–º–µ–Ω–∏—Ç—å –º–∞–∫—Å. —Å–ø–∏—Å–∞–Ω–∏–µ", callback_data='change:max_debit')],
    [InlineKeyboardButton(text="üë• –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", callback_data='interact_with_user_bonus')],
    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]
])

users_balance = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ 1000‚Äì5000", callback_data='bonus_users:1000')],
    [InlineKeyboardButton(text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ 5001‚Äì10000", callback_data='bonus_users:5000')],
    [InlineKeyboardButton(text="üëë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ 10000+", callback_data='bonus_users:10000')],
    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data='bonus_system')]
])
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º–∏
manage_workers = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üë• –°–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞", callback_data='personal')],
    [
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞", callback_data='action_admin:worker:add'),
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data='action_admin:admin:add')
    ],
    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
])

# –í—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ (—Ä–∞–±–æ—Ç–Ω–∏–∫ –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)
view_personal_type = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="üßë‚Äçüíº –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤", callback_data='personal_list:worker'),
        InlineKeyboardButton(text="üë®‚Äçüíª –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤", callback_data='personal_list:admin')
    ],
    [
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data='employees')
    ]
])

# –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
async def inline_personal(personal_dict):
    keyboard = InlineKeyboardBuilder()
    for user_id, name in personal_dict.items():
        keyboard.row(
            InlineKeyboardButton(
                text=name,
                callback_data=f"employee_profile:{user_id}:all"
            )
        )
    keyboard.row(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='personal'))

    return keyboard.as_markup()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞
async def employee_stats(user_id):
    worker_profile = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –¥–µ–Ω—å", callback_data=f"employee_profile:{user_id}:day"),
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é", callback_data=f"employee_profile:{user_id}:week"),
        ],
        [
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü", callback_data=f"employee_profile:{user_id}:month"),
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è", callback_data=f"employee_profile:{user_id}:all"),
        ],
        [
            InlineKeyboardButton(text="üìù –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã", callback_data=f"worker_reviews:{user_id}"),
        ],
        [
            InlineKeyboardButton(text="‚ùå –°–Ω—è—Ç—å —Ä–æ–ª—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data=f"action_admin:{user_id}:remove")
        ],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="employees")],
    ])
    return worker_profile

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –±–∞–ª–∞–Ω—Å–æ–º
async def create_users_keyboard(users_dict: dict, page: int = 1, users_per_page: int = 10) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.

    :param users_dict: –°–ª–æ–≤–∞—Ä—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.
    :param page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.
    :param users_per_page: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
    :return: InlineKeyboardMarkup.
    """
    keyboard = []

    users_list = list(users_dict.items())
    total_users = len(users_list)
    total_pages = (total_users + users_per_page - 1) // users_per_page

    if total_users == 0:
        keyboard.append([InlineKeyboardButton(text="–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="none")])
    else:
        start = (page - 1) * users_per_page
        end = start + users_per_page
        users_on_page = users_list[start:end]

        for user_id, user_data in users_on_page:
            name = user_data["name"]
            bonus_balance = user_data["bonus-balance"]
            button_text = f"{name} {bonus_balance}"
            keyboard.append([InlineKeyboardButton(text=button_text, callback_data=f"bonus_user:{user_id}")])

        if total_pages > 1:
            pagination_buttons = []
            if page > 1:
                pagination_buttons.append(InlineKeyboardButton(text="<-", callback_data=f"page:{page - 1}"))
            pagination_buttons.append(InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data="none"))
            if page < total_pages:
                pagination_buttons.append(InlineKeyboardButton(text="->", callback_data=f"page:{page + 1}"))
            keyboard.append(pagination_buttons)

    keyboard.append([InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="interact_with_user_bonus")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def get_user_profile_admin(user_id):
    user_profile = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üõí –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫', callback_data=f'history_purchase_user:{user_id}')],
        [
            InlineKeyboardButton(text="‚ùå –ó–∞–±—Ä–∞—Ç—å –±–æ–Ω—É—Å—ã", callback_data=f'bonus:remove:{user_id}'),
            InlineKeyboardButton(text="‚úÖ –ù–∞—á–∏—Å–ª–∏—Ç—å –±–æ–Ω—É—Å—ã", callback_data=f'bonus:add:{user_id}')
        ],
        [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='back_to_main')],
    ])
    return user_profile


delete_button_admin = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data='delete_button_admin')]
])

send_message_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üìù –ì–∞–π–¥ –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é', callback_data='instructionHTML')],
    [InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancelAction')]
])

confirm_button = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='confirmSendMessage')],
    [InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancelAction')]
])