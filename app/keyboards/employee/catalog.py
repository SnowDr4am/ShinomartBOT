from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup

import math
from typing import List

from app.database.models import Category, Item

employee_item_type_view = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ë/–£ –†–µ–∑–∏–Ω–∞', callback_data='create_item:tires')],
    [InlineKeyboardButton(text='–ë/–£ –î–∏—Å–∫–∏', callback_data='create_item:discs')]
])

employee_season_view = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="‚òÄÔ∏è –õ–µ—Ç–Ω—è—è", callback_data='create_item_season:summer')],
    [InlineKeyboardButton(text="‚ùÑÔ∏è –ó–∏–º–Ω—è—è", callback_data='create_item_season:winter')],
    [InlineKeyboardButton(text="üå¶ –í—Å–µ—Å–µ–∑–æ–Ω", callback_data='create_item_season:allseason')],
])

async def get_create_radius_keyboard(categories: List[Category], type_id: int) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    for cat in sorted(categories, key=lambda c: c.value):
        builder.button(text=cat.value, callback_data=f"create_radius:{type_id}:{cat.id}")
    builder.adjust(2)

    return builder.as_markup()

success_upload_picture = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ")]
    ],
    resize_keyboard=True
)

async def confirm_employee_submission_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="create_confirm:yes"),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="create_confirm:no"),
            ]
        ]
    )


async def employee_edit_card_keyboard(item_id: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_card_field:{item_id}:value")],
        [InlineKeyboardButton(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit_card_field:{item_id}:description")],
        [InlineKeyboardButton(text="üí∞ –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É", callback_data=f"edit_card_field:{item_id}:price")],
        [InlineKeyboardButton(text="üì∏ –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ", callback_data=f"edit_card_field:{item_id}:photos")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"item:{item_id}")]
    ])

async def view_update_card(item_id: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É", callback_data=f"item:{item_id}")]
    ])