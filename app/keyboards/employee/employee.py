from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='üí≥ –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è')],
        [KeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞')]
    ],
    resize_keyboard=True
)

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
async def generate_phone_numbers_keyboard(phone_numbers: list[str]) -> InlineKeyboardMarkup:
    keyboard = []
    for phone in phone_numbers:
        button = InlineKeyboardButton(text=phone, callback_data=f'select_phone:{phone}')
        keyboard.append([button])
    cancel_button = InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data='cancel')
    keyboard.append([cancel_button])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
async def generate_phone_numbers_appointment(phone_numbers: list[str]) -> InlineKeyboardMarkup:
    if not phone_numbers or not isinstance(phone_numbers, list):
        return InlineKeyboardMarkup(inline_keyboard=[])

    keyboard = []
    for phone in phone_numbers:
        button = InlineKeyboardButton(text=f"üìû {phone}", callback_data=f"appointment_phone:{phone}")
        keyboard.append([button])
    cancel_button = InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
    keyboard.append([cancel_button])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


async def approved_remove_appointment_keyboard(user_id: str) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üóëÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å",
                callback_data=f"remove_appointment_approved:{user_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                callback_data="cancel"
            )
        ]
    ])
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
async def transaction_profile_keyboard(user_id):
    new_transaction = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ', callback_data='transaction:add'),
            InlineKeyboardButton(text='üí∏ –°–ø–∏—Å–∞–Ω–∏–µ', callback_data='transaction:remove')
        ],
        [InlineKeyboardButton(text='üõí –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫', callback_data=f'history_purchase_user:{user_id}')],
        [
            InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='transaction:cancel')
        ]
    ])
    return new_transaction

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
confirm_transaction = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–ø–∏—Å–∞–Ω–∏–µ', callback_data='confirm:yes')],
    [InlineKeyboardButton(text='üí≥ –ö–æ–ø–∏—Ç—å –±–∞–ª–ª—ã', callback_data='confirm:no')],
    [InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='confirm:cancel')]
])

assessment = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚≠ê –ü–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É —Ä–∞–±–æ—Ç–Ω–∏–∫—É ‚≠ê', callback_data='start_assessment')]
])